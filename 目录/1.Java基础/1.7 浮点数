3-王鑫
【第9次讨论主题：浮点数】
1）包装类Float中为什么有两个常量来表示最小值：MIN_VALUE和MIN_NORMAL？
MIN_VALUE：保存 float 类型数据的最小正非零值的常量，即 2-149。
MIN_NORMAL： 保存 float 类型数据的最小正标准值的常量，即 2-126。    							 	  
MIN_NORMAL是可以表示的最小的数字，前提是在二进制点前面有一个1(在十进制系统中称为小数点)。
而Double.MIN_VALUE基本上是最小的数字，你可以表示没有这个约束。（以上摘抄至网络）													                       
2）double a = 1.0-0.9的结果不精确等于0.1，为什么？
构成机器语言的是二进制数，而在编程语言中，则使用十进制数和十六进制数记录数据，在转换过程中可能会造成精度丢失。
首先需要将他们拿到内存中进行二进制计算，而0.9的二进制表示本身就不准确，原因是计算机中用2进制表示小数的时候只能够表示能够用1/(2^n)的和的任意组合。因为0.5能够表示，因为它可以表示成为1/2，0.75也能够表示，因为它可以表示成为1/2+1/(2^2)，0.875也能够表示，因为它可以表示成为1/2+1/(2^2)+1/(2^3)，但是二进制0.9无法表示，将小数部分乘2取整，直到小数部分为 0 为止，但是会出现循环，所以根本不能表示。所以结果不精确等于0.1。
1.0的二进制为0011 1111 1000 0000 0000 0000 0000 0000
-0.9的二进制为1011 1111 0110 0110 0110 0110 0110 0110

Java中double类型的格式基本遵循IEEE 754标准。尽管数学意义上的小数是连续的，但double仅仅能表示其中的一些离散点，把这些离散点组成的集合记为S，S的大小还是有限的。如果要保存的小数P刚好在集合S内，那么double类型就能精确的表示P；否则double类型只能从集合S中找一个与P最近的离散点P'代替P，以上对float也成立。0.1是不能用浮点数精确表示的，所以计算结果会有差异。在商业计算中我们要用java.math.BigDecimal。
